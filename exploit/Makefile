CXX         ?= g++
SOURCE_DIR   = $(shell pwd)
SRC_DIR      = $(SOURCE_DIR)/src
INC_DIR      = $(SOURCE_DIR)/inc
OBJ_DIR      = $(SOURCE_DIR)/obj
BUILD_DIR    = $(SOURCE_DIR)/build
OUT_BINARY   = $(BUILD_DIR)/exploit

ADD_INC_DIRS?= 
INCLUDES     = $(INC_DIR) $(ADD_INC_DIRS)
INC_PARAMS   = $(foreach path, $(INCLUDES), -I$(path))
SRC_FILES    = $(wildcard src/*.cc)
OBJ_FILES    = $(SRC_FILES:src%.cc=obj%.o)

CXX_FLAGS    = -Wall -Wextra -std=c++17 $(INC_PARAMS) -ggdb
LD_FLAGS     = -lflashrom 

GREEN_COLOR = \\033[0;32m
RED_COLOR   = \\033[0;31m
NC          = \\033[0;m

.PHONY: build
build: $(OUT_BINARY)
	@echo "$(GREEN_COLOR)Collecting shared libs.$(NC)"	
	@for lib in `ldd $(OUT_BINARY) | grep '=>' | cut -d ' ' -f 3`; do \
		cp -v --parents $$lib $(BUILD_DIR); \
	done;
	@echo "$(GREEN_COLOR)Copying ld.linux.$(NC)"
	@find -L /lib64 -name "ld-linux*" -exec cp -v {} $(BUILD_DIR) \;


obj/%.o: src/%.cc
	@if ! [ -d $(OBJ_DIR) ]; then \
		mkdir $(OBJ_DIR); \
	fi;
	@echo "  CXX   $^"
	@$(CXX) -c $(CXX_FLAGS) $^ -o $@

$(OUT_BINARY): $(OBJ_FILES)
	@if ! [ -d build ]; then \
		mkdir $(BUILD_DIR); \
	fi;
	@echo "   LD   $@"
	@$(CXX) $(OBJ_FILES) -o $(OUT_BINARY) $(LD_FLAGS) 

.PHONY: clean
clean:
	rm -rf $(OBJ_DIR)
	rm -f $(OUT_BINARY)




