#include <stdarg.h>
#include <cstdlib>
#include <cstdio>

#include <cstdint>
#include "s3exploit_ioctl.h"

static const char *NO_COLOR = "\033[0;m";
static const char *RED_COLOR = "\033[0;31m";
static const char *GREEN_COLOR = "\033[0;32m";
static const char *BLUE_COLOR = "\033[0;34m";
static const char *YELLOW_COLOR = "\033[0;33m";


static void log(const char *color, const char *status, const char *format, va_list args) {
    printf("[%s%s%s]: ", color, status, NO_COLOR);
    vprintf(format, args);
}

void log_ok(const char *format, ...) {
    va_list list;
    va_start(list, format);
    log(GREEN_COLOR, "   OK   ", format, list);
}

void log_warn(const char *format, ...) {
    va_list list;
    va_start(list, format);
    log(YELLOW_COLOR, "  WARN  ", format, list);
}

void log_info(const char *format, ...) {
    va_list list;
    va_start(list, format);
    log(BLUE_COLOR,  "........", format, list);
}

void log_error(const char *format, ...) {
    va_list list;
    va_start(list, format);
    log(RED_COLOR,   " ERROR  ", format, list);
}

void log_struct(const spi_flash_info& info) {
    log_info("Logging SPI flash registers\n");
    log_info("BIOS CNTL : 0x%X\n", info.bios_cntl);
    log_info("HSFS : 0x%X\n", info.hsfs);

    for (std::size_t i=0; i < 5; ++i)
        log_info("FREG[%d] : 0x%X\n", i, info.freg[i]);

    for (std::size_t i=0; i < 5; ++i)
        log_info("PR[%d] : 0x%X\n", i, info.pr[i]);
}
